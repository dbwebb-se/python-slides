Bootstrap grid
Bootstrap är ett färdigt ramverk för webbutvecklare. Hjälper oss med den första grunden i utvecklingen av en webbplats.
Open source. Gratis. Stödjer alla webbläsare. Färdiga teman. Vi använder det via nätet, CDN.
Stort pga bland de första med grid.
https://bootstrap-cheatsheet.themeselection.com/
https://getbootstrap.com/docs/4.2/layout/grid/
https://www.student.bth.se/~grmstud/dbwebb-kurser/
localhost:5000
https://dbwebb.se/kunskap/flask-get-post

Ändra till container
<div class="container-fluid">

Jumbotron -flashig rubrik, slogan
<div class="jumbotron">
    <h1>Om sida</h1>
</div>

well bra container
text-left
<footer class="well">
    <div>
        <p>&copy; 2022 Marie's programming Ltd. </p>
    </div>
</footer>
<footer class="well text-center navbar-fixed-bottom">

Titta i header.html kanske ändra till engelska, rubrik

Ändra till row
<div class="row">

Ändra bredden på kolumnen, lg 992px, md 768 px
<div class="col-md-8">
<div class="col-md-2">

Flytta kolumnen lite till höger
col-md-8 col-md-offset-1

Gör en rad av car info
<div class="row col-md-8 col-md-offset-1">
    <h4> {{ car_info }} </h4>
</div>

Gör 2 kolumner av resten
<div class="row col-md-8 col-md-offset-1">
    <div class="col-md-6">
        <img src="{{ url_for('static',filename='img/leaf_256x256.png') }}" width="256">
    </div>
    <div class="col-md-6">
        <p>HEJ!</p>
    </div>
</div>

Skriv ut session, i app.py
print(session)
=> Fel
Lägg till , use_reloader=True
Importera session: from flask import Flask, render_template, session
=> Ok
session["test"] = "Testing!"
=> Fel, secret key saknas
Lägg till den:
app.secret_key = re.sub(r"[^a-z\d]", "", os.path.realpath(__file__))
Och importera:
import os
import re
=> Se "Testing!" i flasksessionen i terminalfönstret

Hämta från session, app.py
session["test"] = "Testing!"
if session.get("test"):
    info = session.get("test")
Lägg med info och presentera på sidan.
info=session.get("test", "Empty")

Flask GET & POST, about.html
Gör ett formulär.
<h4>Quiz: </h4>
<form role="form" id="quiz" method="GET" action="{{ url_for('about') }}">
    <label for="quiz" class="form-label">How many wheels does a car have?</label>
    <input type="radio" name="wheels" value="3"><b> 3&nbsp;</b>
    <input type="radio" name="wheels" value="4"><b> 4&nbsp;</b>
    <input type="radio" name="wheels" value="5"><b> 5</b>
    <button type="submit" class="btn btn-success btn-md btn-block">Answer</button>
</form>

Spara värdet från checkboxen dvs requesten i session.
if request.form.get("wheels") :
    session["wheels"] = request.form.get("wheels")
Importera även request
Lägg med till templaten alt=session.get("wheels", 0)
=> Ok
Session tom.
Lägg till , methods=["POST", "GET"] på routen /about
=> Fel
=> Inget händer. Ändra method="POST"
Visa på routen
{% if alt == "4" %}
    <p>Your answer is correct!</p>
{% endif %}

Rensa i session, app.py
@app.route("/reset")
def reset():
    """ Route for reset session """
    session.pop("test")

    return redirect(url_for('about'))
Importera: , redirect, url_for

Utöka navbaren header.html
<li {%- if request.path == "/reset" %} class="active" {% endif %}><a href="{{ url_for('reset') }}">Reset</a></li>
=> Se "Testing!" men inte wheels i flasksessionen i terminalfönstret
Välj Reset och det börjar om.

Gör reset utan wheel 
=> Fel, ändra till
_ = [session.pop(key) for key in list(session.keys())]

Lägg till ägare:
i app.py
@app.route("/owner", methods=["POST", "GET"])
def owner():
    """ Adding owner information """
    if request.method == "POST":
        my_owners = session.get("owner", [])
        my_owners.append(request.form["firstname"])
        session["owner"] = my_owners

    return redirect(url_for('about'))

Skicka med /about owners=", ".join(session.get("owner", [])) med templaten

ny kolumn i about.html
<div class="col-md-3">
    <h4>Add owner and services: </h4>
    <form role="form" id="owner" method="POST" action="{{ url_for('owner') }}">
        <div class="form-group">
            <label for="firstname">Name: </label>
            <input type="text" name="firstname" class="form-control" />
        </div>
        <button type="submit" class="btn btn-default">Add</button>
    </form>
</div>

<div class="row col-md-8 col-md-offset-1">
    <h4>Car information </h4>
    <p> Owners: {{ owners }} </p>
</div>


Använd checkboxes för att ange service alternativ:
I about.html
        Insurance
        <input type="checkbox" name="service" value="0">
        Roadside assistance
        <input type="checkbox" name="service" value="1">
        <br>

    <p> Services: {{ services }} </p>

I app.py
/owner
service_list = ["Insurance", "Roadside assistance"]
...
session["service"] = []
if request.form.get("service"):
    session["service"] = [service_list[int(s)] for s in request.form.getlist("service")]

Skicka med /about services=", ".join(session.get("service", []))

I /owner
session["service"] = []


json
I Car klassen
def to_json(self):
    """  Returns a dict all the data of a Car """
    return {
        "model": self.model,
        "price": self.price,
    }

# factory method
@classmethod
def from_json(cls, json):
    """ Creates a new instance of the class Car. """
   return cls(json["model"], json["price"])

i app.py:
session["car"] = my_car.to_json()
if session.get("car"):
    car = Car.from_json(session["car"])
Skicka med car=car till templaten

i about.HTML
    <div class="row col-md-8 col-md-offset-1">
        <h4>From session and Json </h4>
        <p>Model: {{ car.model }} </p>
    </div>

Byt modell
<label for="model">Model: </label>
<input type="text" name="model" class="form-control" />
<label for="price">Price: </label>
<input type="text" name="price" class="form-control" />

i /owner
if (request.form["model"] != "") & (request.form["price"] != ""):
    session["car"] = Car(request.form["model"], request.form["price"]).to_json()

Glöm inte att skicka med car istället för my_car till templaten.

Visa att det finns kvar i sessionen fast du stoppar och startar igen!
